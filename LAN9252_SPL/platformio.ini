; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

; 在配置文件中分号开头为注释
[platformio]
; 将源代码的编译目录移到项目目录下，否则默认src下
src_dir = ./

[env:genericSTM32F405RG]
platform = ststm32
board = genericSTM32F405RG
; framework = stm32cube（不用framework了）
; 编译配置-D是宏定义，-Idir是include文件目录,读者可按自己项目结构更改
; 这里笔者锐评一下: 这种方式就是会十分繁琐！必须依次指定所有的包含目录!
; 在已经存在支持的框架下，请优先使用platformIO已经支持的框架！
build_flags =         
  -D STM32F40_41xxx	; 预定义宏, 看官可以理解为在一切源文件的开头加上了#define STM32F103xE
  -D LAN9252
  -ICore/Inc		; 包含了源文件的路径
  -IDrivers/CMSIS/Include
  -IDrivers/CMSIS/Device/ST/STM32F4xx/Include
  -IDrivers/STM32F4xx_StdPeriph_Driver/inc
  -ILib/soes/hal/stm32-lan9252
  -ILib/soes
  -ILib/bsp
  -ILib/soes-esi
  --specs=nosys.specs

;选择编译文件的所在路径，这里包含了源文件路径，启动文件，驱动库和rtos路径。如果+<*>便是路径下的所以文件，-<.git/>便是忽略.git路径下的文件
build_src_filter = +<Core/Src> +<startup_stm32f405xx.s> +<Drivers/> +<Lib/soes/hal/stm32-lan9252> +<Lib/soes> +<Lib/soes-esi> +<Lib/bsp>
;选择链接文件
board_build.ldscript = ./STM32F405RGTx_FLASH.ld

;upload_flags = -c set CPUTAPID 0x2ba01477
upload_protocol = stlink
debug_tool = stlink